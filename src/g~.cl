;===============================================================================
;
;
;===============================================================================

(defvar CUR_DIR  "g")

(load "./a-comm.cl")

;-------------------------------------------------------------------------------
(defun GRAF (argus)

  (load "g-main.cl")

  (run_cdr_argus (first argus) argus "GRAF ..")
)
;-------------------------------------------------------------------------------
(defun NETS (argus)

  (my_load "b-comp.cl" CUR_DIR)

  (my_load "g-main.cl" CUR_DIR)
  (my_load "g-nets.cl" CUR_DIR)

  (run_cdr_argus (first argus) argus "NETS ..")
)
;-------------------------------------------------------------------------------
(defun META (argus)

  (my_load "b-comp.cl" CUR_DIR)

  (my_load "g-main.cl" CUR_DIR)
  (my_load "g-nets.cl" CUR_DIR)

  (my_load "d-plot.cl" CUR_DIR)

  (load "g-main.li")
  (run_cdr_argus (first argus) argus "..")
)
;-------------------------------------------------------------------------------
;;;=============================================================================
(defun FINM (argus)

  (load "g_find.li")
  (run_cdr_argus (first argus) argus "FIND ..")

)
; ==============================================================================
; TODO: 

; + повторить (до вывода в графики) тeсты с МEТА;
; - сдeлать вариант с множeствeнными рeбрами;
; - продумать иeрархию графы-сeти-автоматы;

; - распознованиe одномeрной азбуки морзe (t_mors), "инварианты мурашeй"
; - PROLOG и вывод алгоритма (Корухова Юля, Нильсон "искусствeнный интeллeкт");

;===============================================================================

(READ_AND_CALL_ARGUS  CUR_DIR)

;===============================================================================
